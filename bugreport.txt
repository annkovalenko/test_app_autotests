Список найденный дефектов и улучшений:

ВАЖНО! На дефекты в тестах уже прописан ОР. На улучшениях в тестах ТЕКУЩЕЕ поведение,
т.к. "Улучшение" после обсуждения с командой может быть принято решение не вносить изменения.

- Дефект №1 (связан с Дефект №2):

Описание: При загрузке шаблона (передача валидного файла в file, ключ data не передаётся),
в названии которого есть буквы в верхнем регистре создаётся шаблон,
беруший в качестве tmpl_id название файла без расширения. При этом значение tmpl_id 
приводится в нижний регистр.
Такое же поведение при передаче помимо file ключа data. Шаблон загружается с названием, 
переданным именно в data (что считаю корректным), но приведя это название к нижнему регистру (а это уже дефект).
Шаги: см. test_upload_templates.py
Варианты ОР: Привести в консестентное состояние с Дефектом №2. 
1) Ввести требование по регистру
2) Сделать идентификатор регистроЗАвисимым и сохранять в точности как передаётся (считаю превильной реализацией).
В свою очередь удаление должно остаться регистроЗАвисимым.
3) Оставить приведение в нижний регистр, но сделать поиск по списку шаблонов при УДАЛЕНИИ (дефект №2)
шаблона регистроНЕзависимым.
TODO: актуализировать тесты на загрузку согласно принятому решению.

- Дефект №2 (связан с Дефект №1):
Описание: При загрузке файла может измениться регистр его названия (см. Дефект №1).
При этом удалить его по переданному названию файла/tmpl_id нельзя. Удалени уже зависит от регистра.
Шаги: см. test_delete_template.py
ОР: Привести в консестентное состояние с Дефектом №1. Варианты описаны в Дефектом №1
TODO: актуализировать тесты на удаление согласно принятому решению.

- Дефект №3:
Описание: в качестве названия файла принимается только латиница и цифры. Хотя tmpl_id в спецификации
указан как string. При отправке спецсимволов/кириллицы/эмоджи файл отображается в списке как
yaml (не зависимо от того, какое было расширение: yaml или yml). При этом при попытке удалить его
через изначально переданное имя или отображающееся в списке yaml невозможно (404, NOT FOUND)
Шаги: все тесты в test_wich_breaks_everything.py
ОР: 
1) При отправке файла, название которого состоит из спецсимволов/кириллицы/эмоджи шаблон успешно
загружается.
2) При просмотре списка шаблонов отображается tmpl_id, равный названию переданного файла (без расширения)
3) Шаблон можно успешно удалить по отображаемому в списке tmpl_id
TODO: после починки - снять метку skip с тестовой функции

- Дефект №4 (валидация шаблона):
Описание: Нет проверки на unique для id в рамках одного шаблона (требование спецификации)
Шаги: см. test_install_templates.py
Варианты ОР:
1) 400 BAD REQUEST, с сообщением об ошибке при загрузке шаблона (если решено реализовать Улучшение 8)
2) 400 BAD REQUEST, с сообщением об ошибке при инсталляции шаблона (при сохранении текущего
механизма валидации шаблона)
TODO: после починки - проверить соответствие текста реализованной ошибки

- Дефект №5:
Описание: Можно удалить инсталлированный шаблон. При этом при обращении к главной странице
шаблон продолжает отображаться.
Шаги: см. test_install_template.py
Варианты ОР (необходимо уточнить требования):
1) Если таки образом предполагается удаление инсталлированного шаблона - 200 Ок, текущее
сообщение + после его удаления он не должен отображаться на главной странице.
2) Если удаление инсталлированного шаблона не предусмотренно - 400 BAD REQUEST, с сообщением об ошибке

- Дефект №6:
Описание: Возможно передать несколько файлов на загрузку. При этом возмутся первый из списка.
Шаги: см. test_upload_templates.py
ОР: Валидация кол-ва передаваемых файлов. При передаче более 1 файла - 400 BAD REQUEST и сообщение
об ошибке

- Дефект №7:
Описание: Нет ограничения длины идентификатора шаблона (tmpl_id). 
При передаче > 255 символов (точка и расширение передаваемого файла учитываются) в качестве 
идентификатора шаблона сервис падает с 500ой.
Если система не даст создать файл с суммарным названием > 255, то на передаче tmpl_id нет валидации.
Шаги: см. test_upload_templates.py (пример сообщения в тест.данных)
ОР: валидировать длину значения параметра tmpl_id, ограничив гарантирванно
допустимой к записи длинной. Например: 100 символов. Ну или 250 при сохранении текущего 
допустимого расширения.
TODO: после починки - дописать проверку сообщения в соответствующую тестовую функцию

- Улучшение №8 (валидация шаблона либо доработка спека):
Описание: из спецификации не яснов, в какой момент происходит валидация шаблона
(при загрузке или при инсталляции). Например, проверка на наличие "родительского" id 
происходит только в момент загрузки. Как и на наличие id у элемента.
Было бы логичней не давать загружать невалидные шаблоны (ибо зачем они нужны) и проводить
валидацию на загрузке.
В любом случае, необходимо добавить в спецификацию информацию о том, в какой момент происходит
валидация.

- Дефект №9:
Описание: согласно спецификации каждый элемент должен иметь id и label. Сейчас имеем:
    1) можно инсталлировать элемент без label
    2) при попытке инсталлировать элемент без id получаем в ответ 500 и сообщение.
    3) наличие проверяется только при инсталляции шаблона (хотелось бы при загрузке, см. Улучшение 8)
Шаги: см. test_install_template.py
ОР: 1) 400, сообщение об ошибке, информирующееб что label - обязательный параметра
    2) код статуса 400, вместо 500ой (всё таки 500 - сервис лёг лапками вверх)


- Дефект № 10:
Описание: Сейчас нет валидации максимально допустимого расмера файла. При отправке достаточно
большого файла (например, 572,8 kB), получаем в ответ 413 Request Entity Too Large
В идеале сделать доп. обработку на этапе загрузки и при превышении мах. значения
возвращать 400, и сообщение типа "превышен максимально допустимый размер файла: {указать мах размер байт}
Ну или хоть в спецификацию эту информацию добавить.

- Дефект № 11:
Описание: Можно передать tmpl_id = "" при загрузке шаблона и сервис успешно создаст запись
с идентификатором, равным "". Только удалить такой шаблон затем невозможно.
Хоть data и не яв-ся обязательной, но при её передачи должны быть валидация передаваемых в ней
параметров и их значений.
Шаги: см. test_upload_templates.py (пример сообщения в тест.данных)
ОР: 400, сообщение об ошибке.

- Дефект № 12:

Описание: при загрузке шаблона в data можно передать пустой словарь и сервис успешно создаст запись
с идентификатором, равным "". Удалить такой шаблон затем невозможно.
Хоть data и не яв-ся обязательной, но при её передачи должны быть валидация передаваемых в ней
параметров.
Шаги: см. test_upload_templates.py (пример сообщения в тест.данных)
ОР: 400, сообщение об ошибке.


- Дефект № 13:

Описание: при загрузке шаблона в data можно передать не валидный JSON и в ответ получить 500ую.
Хоть data и не яв-ся обязательной, но при её передачи должны быть валидация передаваемых в ней
параметров и их значений.
Шаги: см. test_upload_templates.py (пример сообщения в тест.данных)
ОР: 400, сообщение об ошибке.

- Дефект №14:
Описание: При попытке инсталлировать шаблон, в котором элемент ссылается на id родителя,
а родительского элемента нет в списке - сервис возвращает нам сообщение об ошибке.
Вот только код статуса 500ый. А должен быть 400ый (сервис то не с концами помер, просто валидация
сработала)

